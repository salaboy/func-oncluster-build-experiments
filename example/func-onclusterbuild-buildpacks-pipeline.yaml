apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: func-onclusterbuild-buildpacks-pipeline
  annotations:
    description: |
      Build the a `func` project and deploys it to the cluster
spec:
  params:
    - name: gitRepository
      description: The git repository that hosts the `func` project
      default: https://github.com/salaboy/dad-vibes-functions
    - name: gitRevision
      description: The git revision to build
      default: main
    - name: target-name
      description: Name of the image to publish
      default: docker.io/grogdj/dad-vibes-functions
  workspaces:
    - name: cache
      description: buildpacks-cache
    - name: sources
      description: Workspace where the git repo is prepared for building
    - name: dockerconfig
      description: Docker config secret
  tasks:
    - name: clone-repo
      taskRef:
        name: git-clone
        bundle: gcr.io/tekton-releases/catalog/upstream/git-clone:0.5
      params:
        - name: url
          value: $(params.gitRepository)
        - name: revision
          value: $(params.gitRevision)
      workspaces:
        - name: output
          workspace: sources
    - name: buildpacks # This task uses the `buildpacks` task to build the application
      taskRef:
        name: buildpacks
      runAfter: [clone-repo]
      workspaces:
        - name: source
          workspace: sources
        - name: cache
          workspace: sources
      params:
        - name: APP_IMAGE
          value: "$(params.target-name)"
        - name: SOURCE_SUBPATH
          value: "/" # This is the path within the samples repo you want to build (OPTIONAL, default: "")
        - name: BUILDER_IMAGE
          value: paketobuildpacks/builder:tiny # This is the builder we want the task to use (REQUIRED)      
    - name: display-results
      runAfter:
        - buildpacks
      taskSpec:
        steps:
          - name: print
            image: docker.io/library/bash:5.1.4@sha256:b208215a4655538be652b2769d82e576bc4d0a2bb132144c060efc5be8c3f5d6
            script: |
              #!/usr/bin/env bash
              set -e
              echo "Digest of created app image: $(params.DIGEST)"              
        params:
          - name: DIGEST
      params:
        - name: DIGEST
          value: $(tasks.buildpacks.results.APP_IMAGE_DIGEST)
    - name: func-deploy
      runAfter: [display-results]
      taskRef: 
        name: func-deploy
      params: 
      - name: image-sha
        value: "$(params.target-name):$(tasks.buildpacks.results.APP_IMAGE_DIGEST)"
      workspaces:
        - name: output
          workspace: sources  