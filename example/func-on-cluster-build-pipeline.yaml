apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: func-pipeline
  annotations:
    description: |
      Build the a `func` project and deploys it to the cluster
spec:
  params:
    - name: gitRepository
      description: The git repository that hosts the `func` project
      default: https://github.com/salaboy/dad-vibes-functions
    - name: gitRevision
      description: The git revision to build
      default: main
    - name: target
      description: The target container registry and path where to build the image
      default: grogdj
    - name: target-name
      description: Name of the image to publish
      default: dad-vibes
    - name: version
      description: the target version to build
      default: 0.1.0-on-cluster
  workspaces:
    - name: sources
      description: Workspace where the git repo is prepared for building
    - name: dockerconfig
      description: Docker config secret
  results:
    - name: cd.artifact.name
      value: $(tasks.export-results.results.artifactName)
    - name: cd.artifact.version
      value: $(tasks.export-results.results.artifactVersion)
  tasks:
    - name: clone-repo
      taskRef:
        name: git-clone
        bundle: gcr.io/tekton-releases/catalog/upstream/git-clone:0.5
      params:
        - name: url
          value: $(params.gitRepository)
        - name: revision
          value: $(params.gitRevision)
      workspaces:
        - name: output
          workspace: sources
    - name: func-build
      runAfter: [clone-repo]
      taskRef: 
        name: func-build
      params:  
      - name: ARGS
        value: 
        - "build"
        - "-r"
        - ${params.target}
        - "-v" 
        - "-p"
        - "$(workspaces.output.path)/"
      workspaces:
        - name: output
          workspace: sources  
    - name: export-results
      runAfter: [func-build]
      taskSpec:
        params:
          - name: name
          - name: version
        results:
          - name: artifactName
            description: The name of the artifact
          - name: artifactVersion
            description: The version of the artifact
        steps:
          - name: create-results
            image: alpine
            env:
              - name: ARTIFACT_NAME_RESULT_VALUE
                value: $(params.name)
              - name: ARTIFACT_VERSION_RESULT_VALUE
                value: $(params.version)
            script: |
              printf "$ARTIFACT_NAME_RESULT_VALUE" > "$ARTIFACT_NAME_RESULT_PATH"
              printf "$ARTIFACT_VERSION_RESULT_VALUE" > "$ARTIFACT_VERSION_RESULT_PATH"
      params:
        - name: name
          value: $(params.target-name)
        - name: version
          value: $(params.version)